/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/j7MkwNDUC4p
 */
import {
  PopoverTrigger,
  PopoverContent,
  Popover,
} from '@/components/ui/popover';
import { Button } from '@/components/ui/button';
import { mutate } from 'swr';
import { useState } from 'react';
import { failToast, successToast } from '@/lib/toast';
import Loader from '@/components/ui/loader';

export function DeleteGroupButton(props: {
  groupID: string;
  clearActiveChat: () => void;
}) {
  const [open, setOpen] = useState(false);
  const [loading, setLoading] = useState(false);

  async function deleteGroup() {
    setLoading(true);
    let data;
    try {
      const response = await fetch(projectUrl + `/group/${props.groupID}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
      });

      data = await response.json();
      props.clearActiveChat();
      mutate(projectUrl + '/group');
      setOpen(false);
      successToast('Group deleted');
      setLoading(false);
    } catch (error) {
      setLoading(false);
      failToast(data?.error ? data?.error : 'Failed to delete group');
    }
  }

  return (
    <>
      {loading && <Loader />}
      <Popover open={open} onOpenChange={setOpen}>
        <PopoverTrigger className='inline-block p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800/50'>
          <TrashIcon className='w-5 h-5' />
        </PopoverTrigger>
        <PopoverContent className='w-48'>
          <div />
          <div />
          <div>
            <div className='leading-none'>Are you sure you want to delete?</div>
            <div className='flex justify-end gap-2 mt-2'>
              <Button onClick={() => setOpen(false)} size='sm'>
                Cancel
              </Button>
              <Button size='sm' variant='destructive' onClick={deleteGroup}>
                Delete
              </Button>
            </div>
          </div>
        </PopoverContent>
      </Popover>
    </>
  );
}

function TrashIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns='http://www.w3.org/2000/svg'
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      stroke='currentColor'
      strokeWidth='2'
      strokeLinecap='round'
      strokeLinejoin='round'
    >
      <path d='M3 6h18' />
      <path d='M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6' />
      <path d='M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2' />
    </svg>
  );
}
